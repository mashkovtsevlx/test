{"version":3,"file":"sections.cart-upsell-page.js","mappings":"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","sources":["webpack://SkinShark/webpack/runtime/chunk loaded","webpack://SkinShark/./scripts/tools/utilities/helper-functions.ts","webpack://SkinShark/./scripts/tools/product/variant.ts","webpack://SkinShark/./scripts/tools/constants/attributes.ts","webpack://SkinShark/./scripts/tools/constants/classes.ts","webpack://SkinShark/./scripts/tools/utilities/fetch-data.ts","webpack://SkinShark/./scripts/objects/bundle/bundle-common.ts","webpack://SkinShark/./scripts/objects/upsell.ts","webpack://SkinShark/./scripts/sections/cart-upsell-page.ts","webpack://SkinShark/external var \"jQuery\"","webpack://SkinShark/webpack/bootstrap","webpack://SkinShark/webpack/runtime/define property getters","webpack://SkinShark/webpack/runtime/global","webpack://SkinShark/webpack/runtime/hasOwnProperty shorthand","webpack://SkinShark/webpack/runtime/runtimeId","webpack://SkinShark/webpack/runtime/jsonp chunk loading","webpack://SkinShark/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\n\nexport function onReady(action?: () => void): Promise<void> | undefined{\n  let resolvePromise: () => void;\n  document.addEventListener(\"DOMContentLoaded\", (e: any) => {\n    if(action) action(); else resolvePromise()\n  })\n  if(!action) return new Promise<void>(resolve => resolvePromise = resolve)\n}\n\ntype SortVal = string | number\ntype DeepProperties = string | string[]\ntype AscendingDescending = 'ascending' | 'descending'\n\n/**\n * \n * @param {any[]} array \n * @param ascendingDescending \n * @param deepProperties \n * @returns {T} Return sorted array\n * @example sort([{x: 2}, {x: 1}, {x: 3}], 'descending', 'x')\n * output: [{x:3},{x:2},{x:1}]\n * \n */\nexport const sort = <\n  T extends any[], \n  T2 extends DeepProperties\n>(\n  array: T,\n  ascendingDescending: AscendingDescending = 'ascending',\n  deepProperties?: T2\n): T => {  \n  return array.sort((a, b) => (\n    (getSortVal(a) < getSortVal(b) ? 1 : -1) *\n    (ascendingDescending == 'descending' ? -1 : 1)\n  ))\n  \n  function getSortVal(rootObj: any): SortVal{\n    return (\n      !deepProperties ? rootObj : \n      typeof deepProperties == 'string' ? rootObj[deepProperties] : \n      deepProperties.reduce((deepProp, prop) => deepProp[prop], rootObj)\n    )\n  }\n}\n\nexport function toDecimalPlaces(number: number, decimalPlaces: number): number{\n  return Math.round(number * Math.pow(10,decimalPlaces)) / Math.pow(10,decimalPlaces)\n}\n\n\nconst existingTimeOuts: {[key: string]: {timeout: any, reject: any}} = {}\nexport function debounce(milliseconds: number, name: string): Promise<void>{\n\n  if(existingTimeOuts[name]){\n    clearTimeout(existingTimeOuts[name].timeout)\n    existingTimeOuts[name].reject()\n    delete existingTimeOuts[name]\n  }\n\n  return new Promise((resolve, reject) => {\n    existingTimeOuts[name] = {\n      timeout: setTimeout(resolve, milliseconds),\n      reject\n    }\n  })\n\n}\n\n\nexport function getElem<T extends HTMLElement>(selector: string, container?: HTMLElement, handleError?: 'throw on fail'): T{\n  const elem: T = (container || document).querySelector(selector)!;\n  if(!elem && handleError == 'throw on fail'){\n    throwSelectorError(selector)\n  }\n  return elem\n}\n\nexport function getElems<T extends HTMLElement>(selector: string, container?: HTMLElement, handleError?: 'throw on fail'): T[]{\n  const elems: T[] = Array.from((container || document).querySelectorAll(selector));\n  if(!elems.length && handleError == 'throw on fail'){\n    throwSelectorError(selector)\n  }\n  return elems\n}\n\n\nexport function throwSelectorError(selector: string){\n  throw `Could not find element with selector ${selector}`\n}\n\n\nexport function waitForNextFrame(){\n  return new Promise(resolve => requestAnimationFrame(resolve));\n}\n\nexport function onScroll(action: () => void){\n  let previousScrollAmount: number;\n  doActionThenWaitForNextFrame();\n\n  function doActionThenWaitForNextFrame() {\n    const currentScrollAmount = window.scrollY;\n\n    if (currentScrollAmount !== previousScrollAmount) {\n      action();\n      previousScrollAmount = currentScrollAmount;\n    }\n    // on next animation frame, trigger same function\n    requestAnimationFrame(doActionThenWaitForNextFrame);\n  }\n}\n\nexport function elemIsInView(elem: HTMLElement): boolean {\n  // top and bottom values are relative to window view\n  const { top, bottom } = elem.getBoundingClientRect();\n  const elemOutOfView = top > window.innerHeight || bottom < 0;\n  return elemOutOfView ? false : true;\n}\n\n// on resize\nconst actions: (() => void)[] = [];\nexport function onResize(action: () => void) {\n  actions.push(action);\n}\nwindow.addEventListener('resize', (_) => actions.forEach((action) => action()));\n\nexport function loop(number: number, action: (i?: number) => void) {\n  for (let i = 0; i < number; i++) {\n    action(i);\n  }\n}\n\nexport const randomNumber = ({ digits }: { digits: number }): number => {\n  const num = Math.pow(10, digits - 1);\n  return Math.round(Math.random() * num);\n};\n\nexport const timer = ({ seconds }: { seconds: number }) =>\n  new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n","import { productGetUrl, WithProduct } from \"./product\";\nimport { handlize } from '@process-creative/slate-theme-tools';\n\nexport type Variant = {\n  available:boolean;\n  barcode:string;\n  compare_at_price:number|null;\n  featured_image:string|null;\n  featured_media:{ id:string };\n  id:VariantId;\n  inventory_management:'shopify'|null;\n  inventory_policy:'continue'|'deny'|null;\n  name:string;\n  variantIndex?: number\n\n  /** @deprecated */\n  option1:string;\n  /** @deprecated */\n  option2:string|null;\n  /** @deprecated */\n  option3:string|null;\n\n  options:string[];\n  price:number;\n\n  /** @deprecated */\n  public_title:string;\n\n  requires_shipping:boolean;\n  sku:string|null;\n  taxable:boolean;\n  title:string;\n  weight:number;\n  inventory_quantity:number|null;\n}\n\nexport type VariantId = number;\n\nexport type WithVariant = { variant:Variant; };\nexport type WithVariants = { variants:Variant[] };\nexport type WithVariantId = { variantId:number; };\nexport type WithOptions = { options:string[] };\n\nexport const variantFirstAvailable = ({ variants }:WithVariants) => {\n  return variants.find(v => v.available);\n}\n\nexport const variantFirstAvailableOrDefault = (p:WithVariants) => {\n  return variantFirstAvailable(p) || p.variants[0];\n}\n\nexport const variantGetFromOptions = (params:WithOptions & WithProduct) => (\n  params.product.variants.find(variant => (\n    variantDoesHaveOption({ ...params, variant })\n  ))\n);\n\nexport const variantDoesHaveOption = (params:WithVariant & WithOptions) => (\n  params.options.every((val,pos) => handlize(params.variant.options[pos]) === handlize(val))\n);\n\nexport const variantGetUrl = (params:WithVariant & WithProduct) => (\n  `${productGetUrl(params)}?variant=${params.variant.id}`\n);","export const ATTR_DISABLED = 'disabled';","export const CLASS_ACTIVE = 'is-active';\nexport const CLASS_OPEN = 'is-open';\nexport const CLASS_HIDDEN = 'is-hidden';\nexport const CLASS_VISIBLE = 'is-visible';\nexport const CLASS_FADE_IN = 'is-fade-in';\nexport const CLASS_FADE_OUT = 'is-fade-out';\nexport const CLASS_STICKY = 'is-sticky';\nexport const CLASS_FIXED = 'is-fixed';\nexport const CLASS_STUCK = 'is-stuck';\nexport const CLASS_UNAVAILABLE = 'is-unavailable';\nexport const CLASS_SELECTED = 'is-selected';\nexport const CLASS_DISABLED = 'is-disabled';\nexport const CLASS_SCROLL_DISABLED = 'is-scroll-disabled';\nexport const CLASS_HAS_ERROR = 'has-error';\nexport const CLASS_MENU_TOGGLE = 'is-menu-open';\nexport const CLASS_INITIALISED = 'is-initialised';\nexport const CLASS_SOLD_OUT = 'is-sold-out';","import { Product } from \"../product/product\";\nimport { Variant } from \"../product/variant\";\n\n\nexport function variantFetch(productHandle: string, variantId: number): Promise<Variant>{\n  const fetchUrl = `/products/${productHandle}?view=json-variant&variant=${variantId}`;\n  return fetch(fetchUrl).then(r => r.json())\n}\nexport function productFetch(productHandle: string): Promise<Product>{\n  const fetchUrl = `/products/${productHandle}?view=json-product`;\n  return fetch(fetchUrl).then(r => r.json())\n}","import { getCurrentCart, ON_CART_FINISHED, t, cartAdd, CartAdd, formatMoney, getFormat, printMoney, changeCart } from \"@process-creative/slate-theme-tools\";\nimport { Cart } from \"../../tools/cart/cart\";\nimport { ATTR_DISABLED } from \"../../tools/constants/attributes\";\nimport { CLASS_DISABLED } from \"../../tools/constants/classes\";\nimport { Product } from \"../../tools/product/product\";\nimport { Variant } from \"../../tools/product/variant\";\nimport { productFetch, variantFetch } from \"../../tools/utilities/fetch-data\";\nimport { randomNumber } from \"../../tools/utilities/helper-functions\";\nimport { ValidationState } from \"../../types/types\";\n\n\n\n\nexport type BundleParentProperties = {\n  isProductBundle: string\n  _bundleName: string //for marking child items with associated bundle\n  _percentageDiscount: string\n  _childTitles: string\n}\nexport type BundleChildProperties = {\n  isChildVariant: string\n  _uniqueChildId: string\n}\n\nexport type Bundle = {\n  bundleProduct: Product\n  childVariants: Variant[]\n  percentageDiscount?: number\n}\n\n\n\nexport type ChildVariant = {\n  product: Product\n  variant: Variant\n}\n\n\n\n\nfunction disableButton(addToCartButton: HTMLElement){\n  addToCartButton.classList.add(CLASS_DISABLED);\n  addToCartButton.setAttribute(ATTR_DISABLED, ATTR_DISABLED);\n}\nfunction enableButton(addToCartButton: HTMLElement){\n  addToCartButton.classList.remove(CLASS_DISABLED);\n  addToCartButton.removeAttribute(ATTR_DISABLED);\n}\n\n\n\n\nexport function onAddClicked(addToCartButton: HTMLElement, action: any){\n  addToCartButton.addEventListener('click', e => {\n    e.preventDefault();\n    action();\n  })\n}\n\nexport function onCartUpdated(action: any){\n  $(document).on(ON_CART_FINISHED, action);\n}\n\n\nexport async function addBundleToCart(\n  data: {\n    bundle: Bundle,\n    bundleQuantity?: number\n    addToCartButton?: HTMLElement\n  }\n){\n  let {bundle, bundleQuantity, addToCartButton} = data;\n\n  bundleQuantity = bundleQuantity || 1;\n\n  const {percentageDiscount, childVariants, bundleProduct} = bundle;\n\n  if(addToCartButton){\n    disableButton(addToCartButton)  ;\n    addToCartButton.innerHTML = t('products.product.cart_pending');\n  }\n  \n  const items = setBundleProperties();\n  await cartAdd({items});\n\n  if(addToCartButton){\n    const dispalyMessageDuration = 2000;\n    await new Promise(resolve => setTimeout(resolve, dispalyMessageDuration));\n  }\n\n\n  \n  function setBundleProperties(): CartAdd[]{\n    const bundleProductVariantId = bundleProduct.variants[0].id;\n    const bundleId = bundleProductVariantId + '-' + randomNumber({digits: 6});\n    \n    const childTitles = childVariants\n    .reduce((variantGroups, variant) => {\n\n      const existingVariant = variantGroups.find(g => g.variant.id == variant.id);\n\n      if(existingVariant){\n        existingVariant.quantity ++;\n      }\n      else{\n        variantGroups.push({variant, quantity: 1});\n      }\n      return variantGroups;\n\n    }, [] as {variant: Variant, quantity: number}[])\n    .map(group => `${group.variant.name} ${group.quantity > 1 ? ` X ${group.quantity}` : ''}`)\n    .join('|');\n\n    \n    const bundleProductItem = {\n      id: Number(bundleProductVariantId),\n      quantity: bundleQuantity!,\n      properties: <BundleParentProperties>{\n        isProductBundle: bundleId,\n        _bundleName: bundleProduct.title,\n        _percentageDiscount: percentageDiscount!.toString(),\n        _childTitles: childTitles\n      }\n    }\n    \n    const childVariantItems = childVariants.map((variant): CartAdd => {\n      return {\n        id: variant.id,\n        quantity: bundleQuantity!,\n        properties: <BundleChildProperties>{\n          isChildVariant: bundleId,\n          _uniqueChildId: randomNumber({digits: 6}).toString()\n        }\n      }\n    })\n    const addArray: CartAdd[] = [bundleProductItem, ...childVariantItems];\n    return addArray;\n  }\n\n}\n\n\nexport function updateButton(\n  addToCartButton: HTMLElement, \n  validationState: ValidationState,\n  bundle: Bundle,\n  baseClass: string,\n  quantity?: number\n){\n  switch(validationState){\n    case 'ok':\n      setValidButton(); break;\n    case 'error': setDisabled(); break;\n    case 'all in cart': \n    case 'not enough inventory': \n    case 'unavailable': \n      setSoldOutButton();\n  }\n  \n\n  function setValidButton(){\n    const {priceMoney, compareMoney} = getBundlePrice(bundle, quantity);\n\n    const priceElem = getPriceElem(priceMoney, compareMoney);\n      \n    addToCartButton.innerHTML = `\n      ${t('products.product.add')}\n      <span class='is-divider'>|</span>\n      ${priceElem}\n    `;\n    enableButton(addToCartButton);\n\n    function getPriceElem(priceMoney: string, compareMoney: string){\n      return `\n        <p\n          class=\"o-product-pricing ${baseClass}__add-cart-price\n          ${compareMoney ? 'has-compare' : ''}\"\n          data-product-pricing\n        >\n          ${compareMoney ? `\n            <span.\n              class=\"\n                o-product-pricing__money \n                o-product-pricing__compare \n                ${baseClass}__add-cart-price-money ${baseClass}__add-cart-price-compare\n              \"\n              data-currency\n              data-money=\"${compareMoney}\"\n              data-product-compare-money\n            >\n              ${compareMoney}\n            </span.>` : ''\n          }\n        \n          <span\n            class=\"o-product-pricing__money o-product-pricing__price\n            ${compareMoney ? 'has-compare' : ''}\"\n            data-currency\n            data-money=\"${priceMoney}\"\n            data-product-money\n          >\n            ${priceMoney}\n          </span>\n        </p>\n      `;\n    }\n\n  }\n\n  function setSoldOutButton(){\n    disableButton(addToCartButton);\n    addToCartButton.innerHTML = t('products.product.sold_out');\n  }\n\n\n  function setDisabled(){\n    disableButton(addToCartButton);\n    addToCartButton.innerHTML = t('products.product.disabled');\n  }\n\n  \n\n}\n\nexport function validateVariantAvailability(variant: Variant, quantity = 1, groupQty = 1): ValidationState{\n\n  const cartItems = (getCurrentCart() as Cart).items;\n  const {available, inventory_quantity, id, inventory_policy, inventory_management} = variant;\n  \n  const trackQuantityChecked = inventory_management == 'shopify';\n  const continueSellingWhenOutOfStockChecked = inventory_policy == 'continue';\n\n  if(trackQuantityChecked == false || continueSellingWhenOutOfStockChecked){\n    return 'ok';\n  }\n\n  if(available == false || !inventory_quantity){\n    return 'unavailable';\n  }\n\n  const variantInCartCount = cartItems.reduce((qty, item) => {\n    if(item.variant_id == id){\n      qty += item.quantity;\n    }\n    return qty;\n  }, 0);\n\n  const remainingInventory = inventory_quantity - variantInCartCount;\n\n  if(quantity > 0 && variantInCartCount > 0 && remainingInventory <= 0){\n    return 'all in cart';\n  }\n  if(remainingInventory - (groupQty * quantity) < 0){\n    return 'not enough inventory';\n  }\n  return 'ok';\n}\n\n\n\nexport function validateBundleAvailability(bundle: Bundle, bundleQuantity = 1): ValidationState{\n\n  const groupedVariants = groupChildVariants();\n\n  for(let group of groupedVariants) {\n    const validationState = validateVariantAvailability(group.childVariant, bundleQuantity * group.qty);\n    if(validationState != 'ok'){\n      return validationState;\n    }\n  }\n  \n  return 'ok';\n\n  /* implementation */\n  \n  \n  function groupChildVariants(): {childVariant: Variant, qty: number}[]{\n\n    return bundle.childVariants.reduce((groupedVariants, childVariant) => {\n\n      const existingGroup = groupedVariants.find(g =>\n        g.childVariant.id == childVariant.id\n      );  \n      if(existingGroup)existingGroup.qty++;\n      else  groupedVariants.push({childVariant, qty: 1});\n      return groupedVariants;\n    }, [] as {childVariant: Variant,  qty: number}[]);\n\n  }\n\n\n}\n\n\nexport function getBundlePrice({childVariants, percentageDiscount, bundleProduct}: Bundle, qty = 1): {priceMoney: string, compareMoney: string}{\n\n  const bundleFixedPrice = bundleProduct.variants[0].price * qty\n\n  const totalVariantPrice = childVariants.reduce((totalPrice, variant) => {\n    return totalPrice += variant.price * qty;\n  }, 0)\n\n\n  if(bundleFixedPrice > 0){\n    if(bundleFixedPrice > totalVariantPrice){\n      throw \"Bundle price should not cost more that total of variants\"\n    }\n  \n    return {\n      priceMoney: printMoney(bundleFixedPrice),\n      compareMoney: totalVariantPrice > bundleFixedPrice ? printMoney(totalVariantPrice) : null\n    };\n  \n\n  } else {\n    const priceMoney = formatMoney(\n      !Number(percentageDiscount) ? \n      totalVariantPrice : getPriceAfterDiscount() ,\n        getFormat('', 'money_format')\n    );\n    \n    const compareMoney = !Number(percentageDiscount) ? \n      null : formatMoney(totalVariantPrice, getFormat('', 'money_format'));\n  \n    return {\n      priceMoney,\n      compareMoney\n    };\n  \n\n  }\n\n\n  // implementation\n\n\n  function getPriceAfterDiscount(): number{\n    const discountAmount = totalVariantPrice * percentageDiscount!/100;\n    return totalVariantPrice - discountAmount;\n  }\n\n  \n}\n\nexport async function removeBundleFromCart(bundleId: string){\n\n  const cartItems = (getCurrentCart() as Cart)?.items;\n  const bundleProduct = cartItems.find(i => i.properties?.isProductBundle == bundleId);\n  const childItems = cartItems.filter(i => i.properties?.isChildVariant == bundleId);\n  if(!bundleProduct || !childItems) return\n  changeCart([\n    {key: bundleProduct.key.toString(), quantity: 0},\n    ...childItems.map(item => ({key: item.key.toString(), quantity: 0}))\n  ]);\n}\n\n\nexport async function changeBundleQuantity(bundleId: string, quantity: number): Promise<ValidationState>{\n  const cartItems = (getCurrentCart() as Cart).items;\n  \n  const bundleProductItem = cartItems.find(item => item.properties?.isProductBundle == bundleId)!;\n  const bundleChildItems = cartItems.filter(item => item.properties?.isChildVariant == bundleId);\n\n  const bundleProduct = await productFetch(bundleProductItem.handle);\n  const childVariantObjs = bundleProduct.metafields.childVariants;\n  const childVariants = await fetchBundleVariantsFromShopify();\n\n  const bundle: Bundle = {\n    bundleProduct,\n    childVariants,\n    percentageDiscount: Number(bundleProduct.metafields.percentageDiscount)\n  }\n\n\n  const quantityAdded = quantity - bundleProductItem.quantity;\n  const validationState = validateBundleAvailability(bundle, quantityAdded);\n\n  if(validationState == 'ok'){\n    await updateCartQuantity();\n  }\n\n  return validationState;\n\n  //implementation\n\n\n  async function fetchBundleVariantsFromShopify(): Promise<Variant[]>{\n    const variants: Variant[] = await Promise.all(\n      childVariantObjs!.map(varObj => {\n        const varObjSplit = varObj.split(':')\n        const productHandle = varObjSplit[0]\n        const variantId = Number(varObjSplit[1])\n        return variantFetch(productHandle, variantId)\n      })\n    );\n\n    return variants;\n\n  }\n\n\n\n\n  function updateCartQuantity(){\n    return changeCart([\n      {key: bundleProductItem.key.toString(), quantity},\n      ...bundleChildItems.map(item => ({key: item.key.toString(), quantity}))\n    ]);\n  }\n\n}\n","import { getElem, waitForNextFrame } from \"../tools/utilities/helper-functions\";\nimport {  cartAdd, getCurrentCart, ON_CART_FINISHED} from \"@process-creative/slate-theme-tools\"\nimport { Variant } from \"../tools/product/variant\";\nimport { addBundleToCart, validateVariantAvailability } from \"./bundle/bundle-common\";\nimport { LineItem } from \"../tools/cart/line-item\";\nimport { Product } from \"../tools/product/product\";\nimport { ValidationState } from \"../types/types\";\nimport { Cart } from \"../tools/cart/cart\";\nimport { productFetch, variantFetch } from \"../tools/utilities/fetch-data\";\nimport { CLASS_HIDDEN } from \"../tools/constants/classes\";\n\n\ntype CartUpsellProps = {\n  template: 'cart-upsell-drawer' | 'cart-upsell-page'\n}\nexport const createCartUpsell = ({template}: CartUpsellProps) => {\n  \n\n  const cartPageUpsellBlock = getElem('[data-cart-page-upsell-block]');\n\n  let singleProduct: Product | null\n  let cartItems: LineItem[]\n  let upsellProduct: Product | null\n\n  setupCartUpsell()\n  $(document).on(ON_CART_FINISHED, () => setupCartUpsell());\n\n  onUpsellAddClick(async () => {\n    if (!(upsellProduct && upsellProduct.metafields && upsellProduct.metafields.doesnt_delete_previous_product && upsellProduct.metafields.doesnt_delete_previous_product === \"true\"))\n      await removeExistingFromCart()\n    await addUpsellToCart()\n  })\n\n\n  async function setupCartUpsell(){\n    cartItems = (getCurrentCart() as Cart).items\n    \n    if(template == 'cart-upsell-page'){\n      cartPageUpsellBlock!.classList.add(CLASS_HIDDEN)\n    }\n\n    const nonBundleProduct = await getSingleProduct()\n    const bundleProduct = await  getSingleBundle()\n\n    singleProduct = nonBundleProduct || bundleProduct\n    \n    if(singleProduct){ \n      upsellProduct = await getRelatedUpsellProduct()\n\n      if(upsellProduct) {\n        await addUpsellElemToDom();\n        if(template == 'cart-upsell-page'){\n          cartPageUpsellBlock!.classList.remove(CLASS_HIDDEN)\n        }\n        return\n      }\n    } else {\n      if(template == 'cart-upsell-page'){\n        cartPageUpsellBlock!.classList.add(CLASS_HIDDEN)\n      }\n    }\n\n  }\n\n  /* Implementation */\n\n  async function addUpsellElemToDom(){\n    const validationState = await validateUpsellAvailability()\n\n    const upsellContainer = getElem('[data-cart-upsell-container]')!;\n    if(!upsellContainer) return console.error('upsell container not found');\n\n    if(validationState == 'ok'){\n      const upsellElementString = await getUpsellElement()\n      \n      try{\n        upsellContainer!.classList.add('is-visible')\n        upsellContainer!.innerHTML = ''\n        upsellContainer!.insertAdjacentHTML('afterbegin', upsellElementString!)\n        waitForNextFrame() // bug where need frame refresh to fix\n      } catch(e){\n        console.error('e ' ,e);\n      }\n      \n    } else {    \n      upsellContainer!.classList.remove('is-visible')\n      upsellContainer!.innerHTML = ''\n    }\n\n    return\n  }\n\n  async function getUpsellElement(): Promise<string | null>{\n\n    return fetch(`/products/${upsellProduct!.handle}?view=${template}`,\n    {headers: {'Content-Type': 'application/xhtml+xml'}})\n    .then(response => response.text())\n  }\n\n\n  async function getSingleProduct(): Promise<Product | null>{\n    const singleProduct = cartItems[0]\n    if(cartItems.length != 1 || singleProduct.quantity > 1) return Promise.resolve(null)\n    return productFetch(singleProduct.handle)\n  }\n\n\n  function getSingleBundle(): Promise<Product | null>{\n    const {bundles, singleProds} = cartItems.reduce(({bundles, singleProds}, item) => {\n      if(item.properties?.isProductBundle){\n        bundles.push(item)\n      } else if(!item.properties?.isChildVariant){\n        singleProds.push(item)\n      }\n      return {bundles, singleProds}\n    }, {bundles: [] as LineItem[], singleProds: [] as LineItem[]})\n\n    if(singleProds.length || bundles.length != 1) return Promise.resolve(null)\n  \n\n\n    const bundle: LineItem =  bundles[0]\n    if(bundle.quantity > 1) return Promise.resolve(null)\n\n    return  productFetch(bundle.handle)\n  }\n\n\n  function getRelatedUpsellProduct(): Promise<Product | null>{\n    const upsellHandle = singleProduct?.metafields.upsellHandle\n    return upsellHandle ? productFetch(upsellHandle) : Promise.resolve(null)\n  }\n\n\n  function validateUpsellAvailability(): Promise<ValidationState>{\n    \n    const childVariants = upsellProduct!.metafields?.childVariants\n    const isBundle = !!childVariants?.length\n\n    if(isBundle){\n      return validateBundleUpsell()\n    } else {\n      return Promise.resolve(validateSingleUpsell())\n    }\n\n\n    async function validateBundleUpsell(): Promise<ValidationState>{\n      /* will validate based on extra items to add */\n      const upsellBundleChildVariantObjs = upsellProduct!.metafields.childVariants\n      if(!upsellBundleChildVariantObjs?.length) return Promise.resolve('error')\n      const singleProductChildVariantObjs = singleProduct!.metafields?.childVariants\n      const singleProductIsBundle = !!singleProductChildVariantObjs?.length\n\n\n      if(singleProductIsBundle){  \n\n        if(!singleProductChildVariantObjs.every(obj => upsellBundleChildVariantObjs.includes(obj))){\n          console.error('Upsell bundle did not have all the children of single bundle')\n          return 'error'\n        }\n\n      }else {\n        const variantHandlesAndIds = upsellBundleChildVariantObjs!.map(varObj => {\n          const varObjSplit = varObj.split(':')\n          const productHandle = varObjSplit[0]\n          const variantId = Number(varObjSplit[1])\n          return {productHandle, variantId}\n        })\n        variantHandlesAndIds[0].variantId\n        const existingProductInBundle = variantHandlesAndIds.some(({variantId}) => \n          singleProduct?.variants[0].id == variantId\n        )\n\n        if(!existingProductInBundle){\n          console.error('Upsell bundle did not have all the children of the existing single product')\n          return 'error'\n\n        }\n\n      }\n        \n      const variants: Variant[] = await Promise.all(\n        upsellBundleChildVariantObjs!.map(varObj => {\n          const varObjSplit = varObj.split(':')\n          const productHandle = varObjSplit[0]\n          const variantId = Number(varObjSplit[1])\n          return variantFetch(productHandle, variantId)\n        })\n      )\n\n      for(let variant of variants) {\n        const validationState = validateVariantAvailability(variant)\n        if(validationState != 'ok'){\n          return validationState\n        }\n      }\n\n      return 'ok'\n    }\n\n    function validateSingleUpsell(): ValidationState{\n      return validateVariantAvailability(upsellProduct!.variants[0])\n    }\n  }\n\n\n  async function removeExistingFromCart(){\n    return fetch('/cart/clear')\n  }\n\n  async function addUpsellToCart(){\n    const upsellBundleChildVariantObjs = upsellProduct!.metafields.childVariants\n    const upsellIsBundle = !!upsellBundleChildVariantObjs?.length\n    if(upsellIsBundle && !upsellProduct!.trackBundleChildInventoryDisabled){\n      const childIdAndHandle = (\n        upsellBundleChildVariantObjs!.map(varObj => {\n          const varObjSplit = varObj.split(':')\n          const productHandle = varObjSplit[0]\n          const variantId = Number(varObjSplit[1])\n          return {productHandle, variantId}\n        })\n      )\n\n      const childVariants: Variant[] = await Promise.all(\n        childIdAndHandle.map(({productHandle, variantId}) => {\n          return variantFetch(productHandle, variantId)\n        })\n      )\n\n\n      return addBundleToCart({\n        bundle:{\n          bundleProduct: upsellProduct!,\n          childVariants,\n          percentageDiscount: Number(upsellProduct!.metafields.percentageDiscount)\n        }\n      })\n      \n    } else {\n      const bundleVariantId = upsellProduct!.variants[0].id\n      await cartAdd({items: [{id: bundleVariantId, quantity: 1}]})\n\n    }\n\n  }\n\n\n\n\n  function onUpsellAddClick(action: () => void){\n    const SEL_UPSELL_ADD_TO_CART = '[data-upsell-add-to-cart]';\n    document.addEventListener('click', e => {\n      const targetIsButton = (e.target as Node).isSameNode(getElem(SEL_UPSELL_ADD_TO_CART))\n\n      const targetIsInButton = (e.target as Element).closest(SEL_UPSELL_ADD_TO_CART)\n\n      const clickTargetIsUpsellAddButton = targetIsButton || targetIsInButton\n      \n      \n      if(clickTargetIsUpsellAddButton){\n        e.preventDefault();\n        e.stopPropagation();\n        action()\n      }\n    })\n  }\n}\n\n","import { createCartUpsell } from \"../objects/upsell\";\nimport { onReady } from \"../tools/utilities/helper-functions\";\n\nonReady(() => {\n  createCartUpsell({template: 'cart-upsell-page'})\n})","module.exports = jQuery;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.j = 4277;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t4277: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkSkinShark\"] = self[\"webpackChunkSkinShark\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [4736], () => (__webpack_require__(1697)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [4736], () => (__webpack_require__(9586)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","getElem","selector","container","handleError","elem","document","querySelector","throwSelectorError","waitForNextFrame","Promise","resolve","requestAnimationFrame","actions","window","addEventListener","_","forEach","action","randomNumber","digits","num","Math","pow","round","random","ATTR_DISABLED","CLASS_HIDDEN","variantFetch","productHandle","variantId","fetchUrl","fetch","then","r","json","productFetch","i","disableButton","addToCartButton","classList","add","setAttribute","addBundleToCart","data","setBundleProperties","bundleProductVariantId","bundleProduct","variants","id","bundleId","childTitles","childVariants","reduce","variantGroups","variant","existingVariant","find","g","quantity","push","map","group","name","join","bundleProductItem","Number","bundleQuantity","properties","isProductBundle","_bundleName","title","_percentageDiscount","percentageDiscount","toString","_childTitles","childVariantItems","isChildVariant","_uniqueChildId","bundle","innerHTML","t","items","cartAdd","setTimeout","validateVariantAvailability","groupQty","cartItems","getCurrentCart","available","inventory_quantity","inventory_policy","inventory_management","trackQuantityChecked","continueSellingWhenOutOfStockChecked","variantInCartCount","qty","item","variant_id","remainingInventory","resolvePromise","e","onReady","singleProduct","upsellProduct","SEL_UPSELL_ADD_TO_CART","template","cartPageUpsellBlock","setupCartUpsell","getSingleProduct","nonBundleProduct","getSingleBundle","getRelatedUpsellProduct","addUpsellElemToDom","remove","validateUpsellAvailability","validationState","upsellContainer","console","error","getUpsellElement","upsellElementString","insertAdjacentHTML","handle","headers","response","text","length","bundles","singleProds","upsellHandle","metafields","validateBundleUpsell","upsellBundleChildVariantObjs","singleProductChildVariantObjs","every","obj","includes","variantHandlesAndIds","varObj","varObjSplit","split","some","all","removeExistingFromCart","addUpsellToCart","trackBundleChildInventoryDisabled","childIdAndHandle","bundleVariantId","$","on","ON_CART_FINISHED","doesnt_delete_previous_product","targetIsButton","target","isSameNode","targetIsInButton","closest","preventDefault","stopPropagation","createCartUpsell","module","exports","jQuery","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","key","splice","d","definition","o","defineProperty","enumerable","get","globalThis","this","Function","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}