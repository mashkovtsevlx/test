{"version":3,"file":"sections.cart-upsell.css","mappings":"AACE,WACE,iBCFkB,CDGlB,8KAIA,eAP2C,CAQ3C,iBARwD,CASxD,iBAT0E,CAC5E,WACE,sBACA,8KAIA,eAP2C,CAQ3C,iBARwD,CASxD,iBAT0E,CAC5E,WACE,qBCCkB,+KDIlB,eCJ+C,CDK/C,iBARwD,CASxD,iBAT0E,CE4D9E,aACE,UACA,8BACA,kBAEA,qBACE,UACA,wBCjEJ,eACE,YACA,mBACA,kBACA,kBCOc,CDNd,8BAEA,sBACE,oBAGA,6BACE,uBAGF,4BACE,WACA,yBAEA,kCACE,WACA,qBACA,eACA,yBACA,WAKN,qBACE,aACA,sBACA,mBACA,uBAEA,wCACA,oDACA,yBACE,wBACA,kBACA,cACA,eACA,aACA,uBACA,mBACA,eCxCW,CDyCX,eACA,4CAEA,wDACE,aACA,cACA,YC1Cc,CD6ChB,+BACE,kBC9Cc,CD+Cd,6ECpDS,CCGX,yCFRN,eA+DI,6BAGE,6BACE,yBAGF,4BACE,oBACA,YACA,wBACA,+CAKJ,qBACE,mBAEA,yB","sources":["webpack://SkinShark/./styles/tools/font-face.scss","webpack://SkinShark/./styles/settings/font-faces.scss","webpack://SkinShark/./styles/tools/animation.scss","webpack://SkinShark/./styles/sections/cart-upsell.scss","webpack://SkinShark/./styles/settings/color.scss","webpack://SkinShark/./styles/tools/responsive.scss"],"sourcesContent":["@mixin t-font--face($name, $fileName, $weight: 400, $style: normal, $display: swap) {\n  @font-face {\n    font-family: $name;\n    src:  url('/assets/#{$fileName}.woff2') format('woff2'),\n          url('/assets/#{$fileName}.woff') format('woff'),\n          url('/assets/#{$fileName}.ttf') format('truetype')\n    ;\n    font-weight: $weight;\n    font-style: $style;\n    font-display: $display;\n  }\n}","@include t-font--face('Kapra', 'KapraRegular');\n\n@include t-font--face('Brix Sans', 'BrixSansMedium');\n@include t-font--face('Brix Sans', 'BrixSansBold', 700);\n","@mixin t-anim--transition($properties, $time: $s-anim--time-short, $ease: $s-anim--ease-out, $delay: '') {\n  transition-timing-function: $ease;\n  transition-duration: $time;\n  transition-property: $properties;\n  @if $delay != '' {\n    transition-delay: $delay;\n  }\n}\n\n@mixin t-anim--animation(\n  $name: '',\n  $time: $s-anim--time-short,\n  $ease: $s-anim--ease-out,\n  $delay: '',\n  $fillMode: '',\n  $iterationCount: infinite\n) {\n  animation-duration: $time;\n  animation-timing-function: $ease;\n  animation-iteration-count: $iterationCount;\n  \n  @if $fillMode != '' {\n    animation-fill-mode: $fillMode;\n  }\n\n  @if $delay != '' {\n    animation-delay: $delay;\n  }\n\n  @if $name != '' {\n    animation-name: $name;\n  }\n}\n\n\n@mixin t-anim--background-swipe($color){\n  @include t-media-query($s-small-up) {\n    position: relative;\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      height: 100%;\n      left: 0;\n      transition: width $s-anim--time-med;\n      width: 0;\n      display: block;\n      content: \"\";\n      background-color: $s-color--background-octonary;\n      z-index: -1;\n    }\n\n    &:hover::before{\n      width: 100%;\n    }\n  }\n\n}\n\n\n.has-fade-up{\n  opacity: 0;\n  transform: translateY(t-to-rem(20));\n  transition: all 3s;\n\n  &.fade-up{\n    opacity: 1;\n    transform: translateX(0);\n  }\n}","@import '../base';\n\n.c-cart-upsell {\n  margin: auto;\n  max-width: 107.5rem;\n  text-align: center;\n  background: $s-color--aqua;\n  padding: 1.75rem 6rem 1.875rem;\n\n  &__title {\n    padding-bottom: 2rem;\n  }\n  &__treats {\n    &-title {\n      padding-bottom: 0.625rem;\n    }\n    \n    &-text {\n      opacity: 0.5;\n      padding-bottom: 1.1875rem;\n\n      &:after {\n        content: '';\n        display: inline-block;\n        width: 6.875rem;\n        border: 2px solid $s-color--blue-green;\n        opacity: 0.1;\n      }\n    }\n  }\n\n  &__form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    &-label { display: none; }\n    &-price { padding-bottom: 1.1875rem; }\n    &-add {\n      margin-bottom: 1.1875rem;\n      border-radius: 50%;\n      width: 2.25rem;\n      height: 2.25rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: $s-color--white;\n      cursor: pointer;\n      transition: all $s-anim--time-default $s-anim--ease-out;\n      \n      svg,* {\n        width: 0.75rem;\n        height: 0.75rem;\n        fill: $s-color--blue-green;\n      }\n\n      &:hover {\n        background: $s-color--blue-green;\n        svg,* { fill: $s-color--white; }\n      }\n    }\n  }\n\n  @include t-media-query($s-small-up) {\n    padding: 4.625rem 0 2.9375rem;\n\n    &__treats {\n      &-title {\n        padding-bottom: 1.1875rem;\n      }\n\n      &-text {\n        max-width: 21.625rem;\n        margin: auto;\n        padding-bottom: 2.875rem;\n        &:after { display: none; }\n      }\n    }\n\n\n    &__form {\n      flex-direction: row;\n      \n      &-label { display: block; }\n      &-price {\n        padding-bottom: 0;\n        padding-left: 0.3rem;\n      }\n\n      &-add {\n        margin: 0 1.5625rem;\n        width: 3rem;\n        height: 3rem;\n      }\n    }\n  }\n}","/*\n *  Base Colors\n *  - For base color naming conventions use: https://chir.ag/projects/name-that-color\n *  - These base colors should only ever be used inside this color file to assign to\n *    other color variables\n */\n$s-color--black: #000;\n$s-color--white: #FFFFFF;\n$s-color--red: #FF0000;\n$s-color--grey: #ccc;\n$s-color--clear: transparent;\n\n$s-color--blue-green: #004851;\n$s-color--aqua: #A6D6DE;\n$s-color--stone-blue: #7FA9AE;\n$s-color--tower-gray: #AFBFC4;\n$s-color--aqua-haze: #F0F6F7;\n$s-color--mint-tulip: #B4F1EA;\n\n$s-color--pale-blue: #BDD0D5;\n$s-color--grey-blue: #83A5AC;\n$s-color--pale-grey: #F0F0F0;\n$s-color--pale-grey-blue: #E5F0F2;\n$s-color--dark-blue: #1C4550;\n$s-color--light-aqua: #C8EEF4;\n$s-color--grey-green: #779196;\n$s-color--light-blue: #F1F7F8;\n$s-color--phosphorescence: #00FFEE;\n\n/*\n *  Color Definitions\n */\n\n// Backgrounds\n$s-color--background:$s-color--white;\n$s-color--background-secondary: $s-color--blue-green;\n$s-color--background-tertiary: $s-color--aqua;\n$s-color--background-quaternary: $s-color--pale-grey-blue;\n$s-color--background-quinary: $s-color--light-aqua;\n$s-color--background-senary: $s-color--stone-blue;\n$s-color--background-septenary: $s-color--light-blue;\n$s-color--background-octonary: $s-color--mint-tulip;\n$s-color--disabled-grey: $s-color--grey;\n\n// Fonts\n$s-color--font-1: $s-color--blue-green;\n$s-color--font-2: $s-color--aqua;\n$s-color--font-3: $s-color--stone-blue;\n$s-color--font-4: $s-color--pale-blue;\n$s-color--font-5: $s-color--grey-blue;\n$s-color--font-6: $s-color--white;\n$s-color--font-8: $s-color--grey-green;\n$s-color--font-9: $s-color--mint-tulip;\n$s-color--font-10: $s-color--phosphorescence;\n\n// Borders\n$s-color--border: $s-color--black;\n$s-color--border-focus: $s-color--grey-blue;\n$s-color--border-secondary: $s-color--aqua;\n\n// Buttons\n$s-color--btn-font: $s-color--white;\n$s-color--btn-background: $s-color--black;\n\n// Input\n$s-color--error: $s-color--red;","@mixin t-media-query($media-query) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $s-screen--breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $media-query == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$media-query}\" does not exist';\n  }\n}\n"],"names":[],"sourceRoot":""}