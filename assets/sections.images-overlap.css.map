{"version":3,"file":"sections.images-overlap.css","mappings":"AACE,WACE,iBCFkB,CDGlB,8KAIA,eAP2C,CAQ3C,iBARwD,CASxD,iBAT0E,CAC5E,WACE,sBACA,8KAIA,eAP2C,CAQ3C,iBARwD,CASxD,iBAT0E,CAC5E,WACE,qBCCkB,+KDIlB,eCJ+C,CDK/C,iBARwD,CASxD,iBAT0E,CE4D9E,aACE,UACA,8BACA,kBAEA,qBACE,UACA,wBC3DJ,kBACE,gBAOA,iDAJE,kBACA,SAMA,CAHF,yBAGE,iBAIA,4BACE,kBACA,YACA,WACA,MACA,OACA,qCACA,iCACE,kBACA,oBAGJ,4BACE,kBACA,YACA,WACA,MACA,OACA,qCACA,iCACE,kBACA,UACA,mBAEA,yCACE,QACA,SAEF,0CACE,WACA,UC3CJ,yCDkDF,wBACE,sBCnDA,yCDFN,kBA0DI,U","sources":["webpack://SkinShark/./styles/tools/font-face.scss","webpack://SkinShark/./styles/settings/font-faces.scss","webpack://SkinShark/./styles/tools/animation.scss","webpack://SkinShark/./styles/sections/images-overlap.scss","webpack://SkinShark/./styles/tools/responsive.scss"],"sourcesContent":["@mixin t-font--face($name, $fileName, $weight: 400, $style: normal, $display: swap) {\n  @font-face {\n    font-family: $name;\n    src:  url('/assets/#{$fileName}.woff2') format('woff2'),\n          url('/assets/#{$fileName}.woff') format('woff'),\n          url('/assets/#{$fileName}.ttf') format('truetype')\n    ;\n    font-weight: $weight;\n    font-style: $style;\n    font-display: $display;\n  }\n}","@include t-font--face('Kapra', 'KapraRegular');\n\n@include t-font--face('Brix Sans', 'BrixSansMedium');\n@include t-font--face('Brix Sans', 'BrixSansBold', 700);\n","@mixin t-anim--transition($properties, $time: $s-anim--time-short, $ease: $s-anim--ease-out, $delay: '') {\n  transition-timing-function: $ease;\n  transition-duration: $time;\n  transition-property: $properties;\n  @if $delay != '' {\n    transition-delay: $delay;\n  }\n}\n\n@mixin t-anim--animation(\n  $name: '',\n  $time: $s-anim--time-short,\n  $ease: $s-anim--ease-out,\n  $delay: '',\n  $fillMode: '',\n  $iterationCount: infinite\n) {\n  animation-duration: $time;\n  animation-timing-function: $ease;\n  animation-iteration-count: $iterationCount;\n  \n  @if $fillMode != '' {\n    animation-fill-mode: $fillMode;\n  }\n\n  @if $delay != '' {\n    animation-delay: $delay;\n  }\n\n  @if $name != '' {\n    animation-name: $name;\n  }\n}\n\n\n@mixin t-anim--background-swipe($color){\n  @include t-media-query($s-small-up) {\n    position: relative;\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      height: 100%;\n      left: 0;\n      transition: width $s-anim--time-med;\n      width: 0;\n      display: block;\n      content: \"\";\n      background-color: $s-color--background-octonary;\n      z-index: -1;\n    }\n\n    &:hover::before{\n      width: 100%;\n    }\n  }\n\n}\n\n\n.has-fade-up{\n  opacity: 0;\n  transform: translateY(t-to-rem(20));\n  transition: all 3s;\n\n  &.fade-up{\n    opacity: 1;\n    transform: translateX(0);\n  }\n}","@import '../base.scss';\n/*\n *  Images overlap section\n *\n *  Version:\n *    1.0.0 - 2020/11/13\n */\n\n.c-images-overlap{\n  margin: 4.5rem 0;\n\n  &__left{\n    position: relative;\n    width: 70%;\n  }\n\n  &__right{\n    position: relative;\n    width: 70%;\n    margin-left: auto;\n  }\n\n  &__image{\n    &-bg{\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      top: 0;\n      left: 0;\n      object-fit: cover;\n      &-wrap{\n        position: relative;\n        padding-bottom: 140%;\n      }\n    }\n    &-ol{\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      top: 0;\n      left: 0;\n      object-fit: cover;\n      &-wrap{\n        position: absolute;\n        width: 63%;\n        padding-bottom: 85%;\n\n        &.is-left{\n          top: 10%;\n          left: 65%;\n        }\n        &.is-right{\n          bottom: 10%;\n          right: 65%;\n        }\n      }\n    }\n  }\n\n  @include t-media-query($s-small-down) {\n    &__left{\n      margin-bottom: 3.5rem;\n    }\n  }\n\n  @include t-media-query($s-small-up) {\n    display: flex;\n    &__left, &__right{\n      width: 35.5%;\n    }\n  }\n\n  @include t-media-query($s-xlarge-up) {\n    margin: 19rem 0 12rem;\n  }\n}","@mixin t-media-query($media-query) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $s-screen--breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $media-query == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$media-query}\" does not exist';\n  }\n}\n"],"names":[],"sourceRoot":""}