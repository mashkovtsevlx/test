{"version":3,"file":"sections.product-and-text-double.css","mappings":"AACE,WACE,iBCFkB,CDGlB,8KAIA,eAP2C,CAQ3C,iBARwD,CASxD,iBAT0E,CAC5E,WACE,sBACA,8KAIA,eAP2C,CAQ3C,iBARwD,CASxD,iBAT0E,CAC5E,WACE,qBCCkB,+KDIlB,eCJ+C,CDK/C,iBARwD,CASxD,iBAT0E,CE4D9E,aACE,UACA,8BACA,kBAEA,qBACE,UACA,wBCjEJ,wBCwDI,kBACA,qBDpDF,kBACA,UEEI,0CFRN,wBC4DM,cACA,kBCrDA,0CFRN,wBCiEM,iBACA,qBD1DJ,8BACE,kBACA,aACA,kCACA,2BACA,mBAIA,wBACA,oBEVE,uEDFA,mBENY,CFOZ,oBEPY,EDQZ,wEDEA,eETa,CFUb,gBEVa,EDOb,wEDMA,iBACA,oBEbc,CFcd,qBEdc,CFed,iBACA,mBDGJ,0CACE,kBACA,OACA,MACA,WACA,YACA,qCACA,WAGF,sCACE,sBACA,kBAEA,gDACE,WACA,cACA,kBAEA,2DACE,mBACA,iBAGF,2DACE,gBACA,kBAKJ,iDACE,WACA,YACA,kBAGF,8CACE,YACA,WAEA,wDIvDJ,kBACA,SACA,QACA,+BJsDM,WAKN,oCACE,gBACA,aK7DkB,CL8DlB,WACA,mBAEA,+CACE,uBACA,iBAGF,+CACE,sBACA,kBACA,QAGF,6CACE,mBAGF,0CACE,aACA,mBAIA,0FACE,WACA,WACA,YACA,kBACA,cACA,MACA,OACA,qBKnGS,CLoGT,WACA,uBAGF,4IACE,aACA,sBACA,UAEA,kJACE,WACA,kBACA,WACA,QACA,SACA,QACA,+BACA,0BACA,kCACA,WAMJ,gGACE,YAGF,2IACE,UAGF,kJACE,WAEA,wJACE,6CEtIJ,yCF+IF,8BACE,mBACA,eACA,kBACA,0CAIF,sCACE,oBAEA,gDACE,WAIJ,oCACE,aACA,sBACA,uBACA,uBACA,2BACA,UAEA,6CACE,mBAGF,0CACE,cACA,aK3Kc,CL4Kd,qBACA,kBAGF,+CACE,kBAGF,+CACE,kBEvLF,0CF+LA,0CACE,UACA,oBEjMF,0CFwMA,6CACE,eAGF,oC","sources":["webpack://SkinShark/./styles/tools/font-face.scss","webpack://SkinShark/./styles/settings/font-faces.scss","webpack://SkinShark/./styles/tools/animation.scss","webpack://SkinShark/./styles/sections/product-and-text-double.scss","webpack://SkinShark/./styles/tools/gutters.scss","webpack://SkinShark/./styles/tools/responsive.scss","webpack://SkinShark/./styles/settings/gutters.scss","webpack://SkinShark/./styles/tools/absolute-centring.scss","webpack://SkinShark/./styles/settings/color.scss"],"sourcesContent":["@mixin t-font--face($name, $fileName, $weight: 400, $style: normal, $display: swap) {\n  @font-face {\n    font-family: $name;\n    src:  url('/assets/#{$fileName}.woff2') format('woff2'),\n          url('/assets/#{$fileName}.woff') format('woff'),\n          url('/assets/#{$fileName}.ttf') format('truetype')\n    ;\n    font-weight: $weight;\n    font-style: $style;\n    font-display: $display;\n  }\n}","@include t-font--face('Kapra', 'KapraRegular');\n\n@include t-font--face('Brix Sans', 'BrixSansMedium');\n@include t-font--face('Brix Sans', 'BrixSansBold', 700);\n","@mixin t-anim--transition($properties, $time: $s-anim--time-short, $ease: $s-anim--ease-out, $delay: '') {\n  transition-timing-function: $ease;\n  transition-duration: $time;\n  transition-property: $properties;\n  @if $delay != '' {\n    transition-delay: $delay;\n  }\n}\n\n@mixin t-anim--animation(\n  $name: '',\n  $time: $s-anim--time-short,\n  $ease: $s-anim--ease-out,\n  $delay: '',\n  $fillMode: '',\n  $iterationCount: infinite\n) {\n  animation-duration: $time;\n  animation-timing-function: $ease;\n  animation-iteration-count: $iterationCount;\n  \n  @if $fillMode != '' {\n    animation-fill-mode: $fillMode;\n  }\n\n  @if $delay != '' {\n    animation-delay: $delay;\n  }\n\n  @if $name != '' {\n    animation-name: $name;\n  }\n}\n\n\n@mixin t-anim--background-swipe($color){\n  @include t-media-query($s-small-up) {\n    position: relative;\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      height: 100%;\n      left: 0;\n      transition: width $s-anim--time-med;\n      width: 0;\n      display: block;\n      content: \"\";\n      background-color: $s-color--background-octonary;\n      z-index: -1;\n    }\n\n    &:hover::before{\n      width: 100%;\n    }\n  }\n\n}\n\n\n.has-fade-up{\n  opacity: 0;\n  transform: translateY(t-to-rem(20));\n  transition: all 3s;\n\n  &.fade-up{\n    opacity: 1;\n    transform: translateX(0);\n  }\n}","@import '../base.scss';\n\n.c-product-and-text-dbl {\n\n  @include t-v-gutters;\n\n\n  position: relative;\n  z-index: 0;\n\n  &__main {\n    position: relative;\n    display: grid;\n    grid-template-columns: 40% 20% 40%;\n    grid-template-rows: 1fr 1fr;\n    align-items: center;\n\n    @include t-gutters(true);\n    padding-top: t-to-rem(50);\n    padding-bottom: t-to-rem(50);\n    grid-row-gap: t-to-rem(40);\n  }\n\n  &__background-image {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    z-index: -1;\n  }\n\n  &__double-image {\n    padding-bottom: 132.7%;\n    position: relative;\n\n    &-container {\n      width: 100%;\n      flex-shrink: 0;\n      position: relative;\n\n      &.is-image-1 {\n        margin-bottom: auto;\n        margin-left: auto;\n      }\n\n      &.is-image-2 {\n        margin-top: auto;\n        margin-right: auto;\n      }\n\n    }\n\n    &-background {\n      width: 100%;\n      height: 100%;\n      position: absolute;\n    }\n\n    &-overlay {\n      height: 100%;\n      width: auto;\n\n      &-container {\n        @include t-absolute-center-x-y;\n        width: initial;\n      }\n    }\n  }\n\n  .text-block {\n    width: t-to-rem(153);\n    color: $s-color--font-1;\n    width: 100%;\n    grid-column: span 2;\n\n    &.is-block-1 {\n      padding-right: t-to-rem(26);\n      margin-left: auto;\n    }\n\n    &.is-block-2 {\n      padding-left: t-to-rem(26);\n      margin-right: auto;\n      order: 1;\n    }\n\n    &__heading {\n      margin-bottom: 5.6%;\n    }\n\n    &__text {\n      display: none;\n      margin-bottom: 5.6%;\n    }\n\n    &+.c-product-and-text-dbl__double-image-container {\n      &::after {\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        background-color: $s-color--white;\n        opacity: 0.5;\n        transition: opacity $s-anim--time-med;\n      }\n\n      .c-product-and-text-dbl__double-image-overlay-container {\n        height: 74.9%;\n        transition: height $s-anim--time-med;\n        z-index: 1;\n\n        &:after {\n          content: '';\n          position: absolute;\n          height: 50%;\n          width: 0;\n          left: 50%;\n          top: 50%;\n          transform: translate(-50%, -50%);\n          transition: box-shadow $s-anim--time-med;\n          box-shadow: 0 0 0px 0px rgba(black, .5);\n          z-index: -1;\n        }\n      }\n    }\n\n    &+.c-product-and-text-dbl__double-image-container:hover {\n      &::after {\n        opacity: 0.85;\n      }\n\n      .c-product-and-text-dbl__double-image-background {\n        opacity: 1;\n      }\n\n      .c-product-and-text-dbl__double-image-overlay-container {\n        height: 80%;\n\n        &:after {\n          box-shadow: 0 0 t-to-rem(40) t-to-rem(24) rgba(black, .25);\n        }\n      }\n    }\n  }\n\n\n  @include t-media-query($s-small-up) {\n\n    &__main {\n      align-items: center;\n      padding-top: 7%;\n      padding-bottom: 7%;\n      grid-template-columns: 42.25% 15.5% 42.25%;\n    }\n\n\n    &__double-image {\n      padding-bottom: 100%;\n\n      &-container {\n        width: 100%;\n      }\n    }\n\n    .text-block {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: flex-start;\n      justify-content: flex-start;\n      width: 90%;\n\n      &__heading {\n        font-size: t-to-rem(50);\n      }\n\n      &__text {\n        display: block;\n        color: $s-color--font-1;\n        margin-bottom: t-to-rem(24);\n        max-width: t-to-rem(520);\n      }\n\n      &.is-block-1 {\n        padding-right: 17%;\n      }\n\n      &.is-block-2 {\n        padding-left: 17%;\n      }\n    }\n\n  }\n\n  @include t-media-query($s-medium-up) {\n    .text-block {\n      &__text {\n        width: 70%;\n        margin-bottom: t-to-rem(32);\n      }\n    }\n  }\n\n  @include t-media-query($s-xlarge-up) {\n    .text-block {\n      &__heading {\n        font-size: t-to-rem(96);\n      }\n\n      &__text {\n        margin-bottom: t-to-rem(40);\n      }\n    }\n  }\n\n  @include t-media-query($s-xxlarge-up) {\n    max-width: t-to-rem(2000);\n    margin-left: auto;\n    margin-right: auto;\n  }\n}","@use 'sass:math';\n\n@mixin t-gutters($padding: false){\n  @if($padding == true){\n    padding-left: $s-gutter--mobile;\n    padding-right: $s-gutter--mobile;\n\n    @include t-media-query($s-small-up) {\n      padding-left: $s-gutter--small;\n      padding-right: $s-gutter--small;\n    }\n    @include t-media-query($s-medium-up) {\n      padding-left: $s-gutter--medium;\n      padding-right: $s-gutter--medium;\n    }\n    @include t-media-query($s-xxlarge-up) {\n      max-width: t-to-rem(2000);\n      padding-left: $s-gutter--xxlarge;\n      padding-right: $s-gutter--xxlarge;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  } @else {\n    margin-left: $s-gutter--mobile;\n    margin-right: $s-gutter--mobile;\n  \n    @include t-media-query($s-small-up) {\n      margin-left: $s-gutter--small;\n      margin-right: $s-gutter--small;\n    }\n    @include t-media-query($s-medium-up) {\n      margin-left: $s-gutter--medium;\n      margin-right: $s-gutter--medium;\n    }\n    @include t-media-query($s-xxlarge-up) {\n      $fullMinusGutters: 2000 - 2000 * math.div($s-gutter--medium * 2, 100%);\n      max-width: t-to-rem($fullMinusGutters);\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n}\n\n@mixin t-v-gutters($padding: false){\n  @if($padding == true){\n    padding-top: t-to-rem(40);\n    padding-bottom: t-to-rem(40);\n  \n    @include t-media-query($s-medium-up) {\n      padding-top: 8%;\n      padding-bottom: 8%;\n    }\n    \n    @include t-media-query($s-xxlarge-up) {\n      padding-top: t-to-rem(160);\n      padding-bottom: t-to-rem(160);\n    }\n  } @else {\n    margin-top: t-to-rem(40);\n    margin-bottom: t-to-rem(40);\n  \n    @include t-media-query($s-medium-up) {\n      margin-top: 8%;\n      margin-bottom: 8%;\n    }\n    \n    @include t-media-query($s-xxlarge-up) {\n      margin-top: t-to-rem(160);\n      margin-bottom: t-to-rem(160);\n    }\n  }\n}\n","@mixin t-media-query($media-query) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $s-screen--breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $media-query == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$media-query}\" does not exist';\n  }\n}\n","\n$s-gutter--mobile: t-to-rem(40);\n$s-gutter--small: t-to-rem(56);\n$s-gutter--medium: 7%;\n$s-gutter--xxlarge: t-to-rem(140);","/*\n *  Absolute Position Centering\n *    Provides mixins to center using absolute positioning and transforms\n *\n *\n *  Version:\n *    1.3.0 - 2019/04/10\n */\n@mixin t-absolute-center-x-y() {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n\n@mixin t-absolute-center-x() {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n@mixin t-absolute-center-y() {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n@mixin t-absolute-full() {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n}","/*\n *  Base Colors\n *  - For base color naming conventions use: https://chir.ag/projects/name-that-color\n *  - These base colors should only ever be used inside this color file to assign to\n *    other color variables\n */\n$s-color--black: #000;\n$s-color--white: #FFFFFF;\n$s-color--red: #FF0000;\n$s-color--grey: #ccc;\n$s-color--clear: transparent;\n\n$s-color--blue-green: #004851;\n$s-color--aqua: #A6D6DE;\n$s-color--stone-blue: #7FA9AE;\n$s-color--tower-gray: #AFBFC4;\n$s-color--aqua-haze: #F0F6F7;\n$s-color--mint-tulip: #B4F1EA;\n\n$s-color--pale-blue: #BDD0D5;\n$s-color--grey-blue: #83A5AC;\n$s-color--pale-grey: #F0F0F0;\n$s-color--pale-grey-blue: #E5F0F2;\n$s-color--dark-blue: #1C4550;\n$s-color--light-aqua: #C8EEF4;\n$s-color--grey-green: #779196;\n$s-color--light-blue: #F1F7F8;\n$s-color--phosphorescence: #00FFEE;\n\n/*\n *  Color Definitions\n */\n\n// Backgrounds\n$s-color--background:$s-color--white;\n$s-color--background-secondary: $s-color--blue-green;\n$s-color--background-tertiary: $s-color--aqua;\n$s-color--background-quaternary: $s-color--pale-grey-blue;\n$s-color--background-quinary: $s-color--light-aqua;\n$s-color--background-senary: $s-color--stone-blue;\n$s-color--background-septenary: $s-color--light-blue;\n$s-color--background-octonary: $s-color--mint-tulip;\n$s-color--disabled-grey: $s-color--grey;\n\n// Fonts\n$s-color--font-1: $s-color--blue-green;\n$s-color--font-2: $s-color--aqua;\n$s-color--font-3: $s-color--stone-blue;\n$s-color--font-4: $s-color--pale-blue;\n$s-color--font-5: $s-color--grey-blue;\n$s-color--font-6: $s-color--white;\n$s-color--font-8: $s-color--grey-green;\n$s-color--font-9: $s-color--mint-tulip;\n$s-color--font-10: $s-color--phosphorescence;\n\n// Borders\n$s-color--border: $s-color--black;\n$s-color--border-focus: $s-color--grey-blue;\n$s-color--border-secondary: $s-color--aqua;\n\n// Buttons\n$s-color--btn-font: $s-color--white;\n$s-color--btn-background: $s-color--black;\n\n// Input\n$s-color--error: $s-color--red;"],"names":[],"sourceRoot":""}