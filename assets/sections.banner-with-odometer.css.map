{"version":3,"file":"sections.banner-with-odometer.css","mappings":"AACE,WACE,iBCFkB,CDGlB,8KAIA,eAP2C,CAQ3C,iBARwD,CASxD,iBAT0E,CAC5E,WACE,sBACA,8KAIA,eAP2C,CAQ3C,iBARwD,CASxD,iBAT0E,CAC5E,WACE,qBCCkB,+KDIlB,eCJ+C,CDK/C,iBARwD,CASxD,iBAT0E,CE4D9E,aACE,UACA,8BACA,kBAEA,qBACE,UACA,wBC3DJ,wBACE,uBAEA,+BCYE,kBCtBe,CDuBf,mBCvBe,CFYf,oBACA,aACA,oCACA,yCACA,0BACA,qBGRE,yCHCJ,+BCgBI,kBCzBY,CD0BZ,mBC1BY,ECQZ,0CHCJ,+BCoBI,cC5Ba,CD6Bb,eC7Ba,ECOb,0CHCJ,+BCyBI,mBACA,iBACA,mBDjBJ,iCACE,gBACA,WACA,wBACA,kBAEA,0CACE,gBACA,wBAGF,uCACE,aIpBU,CJsBV,iDACE,aIxBc,CJ6BpB,uCACE,UAGF,yCACE,uBAEA,kDACE,gBACA,aAGF,mDACE,gBACA,aG7CA,0CHkDF,+BACE,kCACA,uBACA,mBACA,cACA,uBAGF,iCACE,gBACA,aAGF,yCACE,uBAEA,kDACE,gBACA,aAGF,mDACE,gBACA,cGzEF,0CH+EF,+BACE,mCGhFA,0CHsFF,uCACE,UAGF,+BACE,qC","sources":["webpack://SkinShark/./styles/tools/font-face.scss","webpack://SkinShark/./styles/settings/font-faces.scss","webpack://SkinShark/./styles/tools/animation.scss","webpack://SkinShark/./styles/sections/banner-with-odometer.scss","webpack://SkinShark/./styles/tools/gutters.scss","webpack://SkinShark/./styles/settings/gutters.scss","webpack://SkinShark/./styles/tools/responsive.scss","webpack://SkinShark/./styles/settings/color.scss"],"sourcesContent":["@mixin t-font--face($name, $fileName, $weight: 400, $style: normal, $display: swap) {\n  @font-face {\n    font-family: $name;\n    src:  url('/assets/#{$fileName}.woff2') format('woff2'),\n          url('/assets/#{$fileName}.woff') format('woff'),\n          url('/assets/#{$fileName}.ttf') format('truetype')\n    ;\n    font-weight: $weight;\n    font-style: $style;\n    font-display: $display;\n  }\n}","@include t-font--face('Kapra', 'KapraRegular');\n\n@include t-font--face('Brix Sans', 'BrixSansMedium');\n@include t-font--face('Brix Sans', 'BrixSansBold', 700);\n","@mixin t-anim--transition($properties, $time: $s-anim--time-short, $ease: $s-anim--ease-out, $delay: '') {\n  transition-timing-function: $ease;\n  transition-duration: $time;\n  transition-property: $properties;\n  @if $delay != '' {\n    transition-delay: $delay;\n  }\n}\n\n@mixin t-anim--animation(\n  $name: '',\n  $time: $s-anim--time-short,\n  $ease: $s-anim--ease-out,\n  $delay: '',\n  $fillMode: '',\n  $iterationCount: infinite\n) {\n  animation-duration: $time;\n  animation-timing-function: $ease;\n  animation-iteration-count: $iterationCount;\n  \n  @if $fillMode != '' {\n    animation-fill-mode: $fillMode;\n  }\n\n  @if $delay != '' {\n    animation-delay: $delay;\n  }\n\n  @if $name != '' {\n    animation-name: $name;\n  }\n}\n\n\n@mixin t-anim--background-swipe($color){\n  @include t-media-query($s-small-up) {\n    position: relative;\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      height: 100%;\n      left: 0;\n      transition: width $s-anim--time-med;\n      width: 0;\n      display: block;\n      content: \"\";\n      background-color: $s-color--background-octonary;\n      z-index: -1;\n    }\n\n    &:hover::before{\n      width: 100%;\n    }\n  }\n\n}\n\n\n.has-fade-up{\n  opacity: 0;\n  transform: translateY(t-to-rem(20));\n  transition: all 3s;\n\n  &.fade-up{\n    opacity: 1;\n    transform: translateX(0);\n  }\n}","/*  Banner With Odometer\n*\n*  Version:\n*    1.0.0 - 2022/01/06\n*/\n\n@import '../base.scss';\n\n.c-banner-with-odometer {\n  padding-bottom: 3.25rem;\n\n  &__inner {\n    @include t-gutters;\n    padding-top: 0.625rem;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(2, min-content);\n    grid-column-gap: 2.1875rem;\n    justify-items: center;\n  }\n\n  &__content {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    margin: 0 auto 1.8125rem;\n    text-align: center;\n\n    &-pretitle {\n      font-weight: 700;\n      margin-bottom: 1.1875rem;\n    }\n\n    &-title {\n      color: $s-color--font-2;\n\n      .odometer {\n        color: $s-color--font-1;\n      }\n    }\n  }\n\n  &__image-wrapper {\n    width: 71%;\n  }\n\n  &__image-container {\n    padding-bottom: 151.09%;\n\n    & .is-left {\n      grid-column: 1 / 2;\n      grid-row: 2/3;\n    }\n\n    & .is-right {\n      grid-column: 2 /3;\n      grid-row: 2/3;\n    }\n  }\n\n  @include t-media-query($s-medium-up) {\n    &__inner {\n      grid-template-columns: 25% 40% 25%;\n      grid-template-rows: 1fr;\n      align-items: center;\n      margin: 0 auto;\n      justify-content: center;\n    }\n\n    &__content {\n      grid-column: 2/ 3;\n      grid-row: 1/2;\n    }\n\n    &__image-container {\n      padding-bottom: 151.09%;\n\n      & .is-left {\n        grid-column: 1 /1;\n        grid-row: 1/2;\n      }\n\n      & .is-right {\n        grid-column: 3/4;\n        grid-row: 1/2;\n      }\n    }\n  }\n\n  @include t-media-query($s-large-up) {\n    &__inner {\n      grid-template-columns: 20% 40% 20%;\n    }\n  }\n\n  @include t-media-query($s-xxlarge-up) {\n\n    &__image-wrapper {\n      width: 52%;\n    }\n\n    &__inner {\n      grid-template-columns: 30% 53.9375rem 30%;\n      align-items: flex-start;\n    }\n\n    &__content {\n      margin-top: 5.625rem;\n\n      &-pretitle {\n        margin-bottom: 2.6875rem;\n      }\n    }\n  }\n}","@use 'sass:math';\n\n@mixin t-gutters($padding: false){\n  @if($padding == true){\n    padding-left: $s-gutter--mobile;\n    padding-right: $s-gutter--mobile;\n\n    @include t-media-query($s-small-up) {\n      padding-left: $s-gutter--small;\n      padding-right: $s-gutter--small;\n    }\n    @include t-media-query($s-medium-up) {\n      padding-left: $s-gutter--medium;\n      padding-right: $s-gutter--medium;\n    }\n    @include t-media-query($s-xxlarge-up) {\n      max-width: t-to-rem(2000);\n      padding-left: $s-gutter--xxlarge;\n      padding-right: $s-gutter--xxlarge;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  } @else {\n    margin-left: $s-gutter--mobile;\n    margin-right: $s-gutter--mobile;\n  \n    @include t-media-query($s-small-up) {\n      margin-left: $s-gutter--small;\n      margin-right: $s-gutter--small;\n    }\n    @include t-media-query($s-medium-up) {\n      margin-left: $s-gutter--medium;\n      margin-right: $s-gutter--medium;\n    }\n    @include t-media-query($s-xxlarge-up) {\n      $fullMinusGutters: 2000 - 2000 * math.div($s-gutter--medium * 2, 100%);\n      max-width: t-to-rem($fullMinusGutters);\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n}\n\n@mixin t-v-gutters($padding: false){\n  @if($padding == true){\n    padding-top: t-to-rem(40);\n    padding-bottom: t-to-rem(40);\n  \n    @include t-media-query($s-medium-up) {\n      padding-top: 8%;\n      padding-bottom: 8%;\n    }\n    \n    @include t-media-query($s-xxlarge-up) {\n      padding-top: t-to-rem(160);\n      padding-bottom: t-to-rem(160);\n    }\n  } @else {\n    margin-top: t-to-rem(40);\n    margin-bottom: t-to-rem(40);\n  \n    @include t-media-query($s-medium-up) {\n      margin-top: 8%;\n      margin-bottom: 8%;\n    }\n    \n    @include t-media-query($s-xxlarge-up) {\n      margin-top: t-to-rem(160);\n      margin-bottom: t-to-rem(160);\n    }\n  }\n}\n","\n$s-gutter--mobile: t-to-rem(40);\n$s-gutter--small: t-to-rem(56);\n$s-gutter--medium: 7%;\n$s-gutter--xxlarge: t-to-rem(140);","@mixin t-media-query($media-query) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $s-screen--breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $media-query == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$media-query}\" does not exist';\n  }\n}\n","/*\n *  Base Colors\n *  - For base color naming conventions use: https://chir.ag/projects/name-that-color\n *  - These base colors should only ever be used inside this color file to assign to\n *    other color variables\n */\n$s-color--black: #000;\n$s-color--white: #FFFFFF;\n$s-color--red: #FF0000;\n$s-color--grey: #ccc;\n$s-color--clear: transparent;\n\n$s-color--blue-green: #004851;\n$s-color--aqua: #A6D6DE;\n$s-color--stone-blue: #7FA9AE;\n$s-color--tower-gray: #AFBFC4;\n$s-color--aqua-haze: #F0F6F7;\n$s-color--mint-tulip: #B4F1EA;\n\n$s-color--pale-blue: #BDD0D5;\n$s-color--grey-blue: #83A5AC;\n$s-color--pale-grey: #F0F0F0;\n$s-color--pale-grey-blue: #E5F0F2;\n$s-color--dark-blue: #1C4550;\n$s-color--light-aqua: #C8EEF4;\n$s-color--grey-green: #779196;\n$s-color--light-blue: #F1F7F8;\n$s-color--phosphorescence: #00FFEE;\n\n/*\n *  Color Definitions\n */\n\n// Backgrounds\n$s-color--background:$s-color--white;\n$s-color--background-secondary: $s-color--blue-green;\n$s-color--background-tertiary: $s-color--aqua;\n$s-color--background-quaternary: $s-color--pale-grey-blue;\n$s-color--background-quinary: $s-color--light-aqua;\n$s-color--background-senary: $s-color--stone-blue;\n$s-color--background-septenary: $s-color--light-blue;\n$s-color--background-octonary: $s-color--mint-tulip;\n$s-color--disabled-grey: $s-color--grey;\n\n// Fonts\n$s-color--font-1: $s-color--blue-green;\n$s-color--font-2: $s-color--aqua;\n$s-color--font-3: $s-color--stone-blue;\n$s-color--font-4: $s-color--pale-blue;\n$s-color--font-5: $s-color--grey-blue;\n$s-color--font-6: $s-color--white;\n$s-color--font-8: $s-color--grey-green;\n$s-color--font-9: $s-color--mint-tulip;\n$s-color--font-10: $s-color--phosphorescence;\n\n// Borders\n$s-color--border: $s-color--black;\n$s-color--border-focus: $s-color--grey-blue;\n$s-color--border-secondary: $s-color--aqua;\n\n// Buttons\n$s-color--btn-font: $s-color--white;\n$s-color--btn-background: $s-color--black;\n\n// Input\n$s-color--error: $s-color--red;"],"names":[],"sourceRoot":""}